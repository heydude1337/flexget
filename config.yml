variables: variables.yml


templates:
  message:
    notify:
      entries:
        via:
          - pushbullet:
              api_key: o.lP8dfxQxlnqGzCU1Uoh7lMHMRYGSzbXl
  torrent:
    transmission:
      host: "{? trans.adress ?}"
      port: 9091 # "{? trans.port ?}}"
      username: '{? trans.username ?}'
      password: '{? trans.password ?}'
      main_file_only: Yes
      main_file_ratio: 0.7
      include_subs: Yes
      rename_like_files: Yes

  clean_torrent:
    clean_transmission:
      host: "{? trans.adress ?}"
      port: 9091
      username: "{? trans.username ?}"
      password: "{? trans.password ?}"
      finished_for: 2 days
      delete_files: no

  showrss:
    rss: "{? urls.rssfeed ?}"
    accept_all: yes
    thetvdb_lookup: yes
    set:
      path: "{? folder.tvshows ?}/{{ series_name }}/Season {{ series_season }}"
      content_file_name: "{{tvdb_series_name|replace(' ', '.')}}.{{tvdb_ep_id}}"
    exists_series: "{?  folder.tvshows  ?}"
    metainfo_series: yes

  imdb-lookup:
    imdb_watchlist:
      user_id: "{? imdb.username ?}"
      list: "{? imdb.userlist ?}"
    accept_all: yes
    exists_movie:  "{?  folder.movies  ?}"
    list_add:
      - movie_list: imdb_movies

  movies:
    metainfo_movie: yes
    discover:
      what:
        - movie_list: imdb_movies
      from:
        - rarbg:
            category: "{? movies.rarbg_category ?}" 
            sorted_by: seeders
      interval: 4 hours
    content_size:
      min: 2500 # "{? movies.min_size ?}"
      max: 12000 # "{? movies.max_size ?}"
    quality: "{? movies.quality ?}"
    list_match:
      from:
        - movie_list: imdb_movies
      remove_on_match: yes  # remove from list when entries are accepted
    set:
      path: "{? folder.movies ?}/{{ movie_name }}/"
      content_filename: "{{ movie_name }} ({{ movie_year }}) - {{ quality|upper }}"
  
  movie_releases:  
    inputs:
      - rss: "{? urls.imdb_releases ?}" # new movie releases and  
    imdb_lookup: yes
    imdb:  
      min_score: 6.2 # "{? imdb.min_rating ?}"
      min_votes: 1000 # "{? imdb.min_votes ?}"
    list_add:
      - movie_list: imdb_movies
    exists_movie:  "{?  folder.movies  ?}"

tasks:
  imdb_watch_list:
    priority: 1
    template: imdb-lookup
  
  add_releases: 
    priority: 2 
    template: movie_releases

  download_movie_list:
    priority: 3
    template:
      - movies
      - torrent
      - message
  clean:
    priority: 99
    disable: details
    template:
      - clean_torrent

  download_series:
    priority: 10
    template:
      - showrss
      - torrent
      - message

schedules:
  - tasks:
      - imdb_watch_list
      - add_releases
      - download_movie_list
      - clean
      - download_series
    interval:
      hours: 1
    



